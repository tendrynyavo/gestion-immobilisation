-- DROP USER IMMOBILISATION;

CREATE USER IMMOBILISATION
-- IDENTIFIED BY <password>
;

CREATE TABLE "IMMOBILISATION"."ADRESSE" 
   (	"ID_ADDRESSE" VARCHAR2(50), 
	"NOM" VARCHAR2(100) NOT NULL ENABLE, 
	 PRIMARY KEY ("ID_ADDRESSE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

CREATE UNIQUE INDEX "IMMOBILISATION"."SYS_C0012711" ON "IMMOBILISATION"."ADRESSE" ("ID_ADDRESSE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
;

CREATE TABLE "IMMOBILISATION"."BIEN" 
   (	"CODE" VARCHAR2(100), 
	"NOM" VARCHAR2(50) NOT NULL ENABLE, 
	"ID_MARQUE" VARCHAR2(50) NOT NULL ENABLE, 
	 PRIMARY KEY ("CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

ALTER TABLE "IMMOBILISATION"."BIEN" ADD FOREIGN KEY ("ID_MARQUE")
	  REFERENCES "IMMOBILISATION"."MARQUE" ("ID_MARQUE") ENABLE;

CREATE UNIQUE INDEX "IMMOBILISATION"."SYS_C0012790" ON "IMMOBILISATION"."BIEN" ("CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
;

CREATE TABLE "IMMOBILISATION"."CARACTERISTIQUE" 
   (	"ID_CARACTERISTIQUE" VARCHAR2(50), 
	"NOM" VARCHAR2(100) NOT NULL ENABLE, 
	"ID_IMMOBILISATION" VARCHAR2(50), 
	 PRIMARY KEY ("ID_CARACTERISTIQUE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

ALTER TABLE "IMMOBILISATION"."CARACTERISTIQUE" ADD FOREIGN KEY ("ID_IMMOBILISATION")
	  REFERENCES "IMMOBILISATION"."IMMOBILISATION" ("ID_IMMOBILISATION") ENABLE;

CREATE UNIQUE INDEX "IMMOBILISATION"."SYS_C0012730" ON "IMMOBILISATION"."CARACTERISTIQUE" ("ID_CARACTERISTIQUE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
;

CREATE TABLE "IMMOBILISATION"."CATEGORIE" 
   (	"ID_CATEGORIE" VARCHAR2(50), 
	"NOM" VARCHAR2(100) NOT NULL ENABLE, 
	"CODE" VARCHAR2(50), 
	 PRIMARY KEY ("ID_CATEGORIE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

CREATE UNIQUE INDEX "IMMOBILISATION"."SYS_C0012709" ON "IMMOBILISATION"."CATEGORIE" ("ID_CATEGORIE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
;

CREATE TABLE "IMMOBILISATION"."COMPORTEMENT" 
   (	"ID_ETAT" VARCHAR2(50), 
	"DESIGNATION" VARCHAR2(100), 
	"DEBUT" FLOAT(126), 
	"FIN" FLOAT(126), 
	"COLOR" VARCHAR2(50), 
	 PRIMARY KEY ("ID_ETAT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

CREATE UNIQUE INDEX "IMMOBILISATION"."SYS_C0012993" ON "IMMOBILISATION"."COMPORTEMENT" ("ID_ETAT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
;

CREATE TABLE "IMMOBILISATION"."COMPOSANT" 
   (	"ID_COMPOSANT" VARCHAR2(50), 
	"NOM" VARCHAR2(50) NOT NULL ENABLE, 
	"MERE" VARCHAR2(50), 
	"ID_IMMOBILISATION" VARCHAR2(50) NOT NULL ENABLE, 
	"CAPACITE" FLOAT(126), 
	"UNITE" VARCHAR2(100), 
	"ALERTE" NUMBER(*,0), 
	 PRIMARY KEY ("ID_COMPOSANT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

ALTER TABLE "IMMOBILISATION"."COMPOSANT" ADD FOREIGN KEY ("MERE")
	  REFERENCES "IMMOBILISATION"."COMPOSANT" ("ID_COMPOSANT") ENABLE;
 
  ALTER TABLE "IMMOBILISATION"."COMPOSANT" ADD FOREIGN KEY ("ID_IMMOBILISATION")
	  REFERENCES "IMMOBILISATION"."IMMOBILISATION" ("ID_IMMOBILISATION") ENABLE;

CREATE UNIQUE INDEX "IMMOBILISATION"."SYS_C0012726" ON "IMMOBILISATION"."COMPOSANT" ("ID_COMPOSANT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
;

CREATE TABLE "IMMOBILISATION"."DETAIL_BIEN" 
   (	"ID_CARACTERISTIQUE" VARCHAR2(50), 
	"CODE" VARCHAR2(50), 
	"VALEUR" VARCHAR2(200), 
	 PRIMARY KEY ("ID_CARACTERISTIQUE", "CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

ALTER TABLE "IMMOBILISATION"."DETAIL_BIEN" ADD FOREIGN KEY ("ID_CARACTERISTIQUE")
	  REFERENCES "IMMOBILISATION"."CARACTERISTIQUE" ("ID_CARACTERISTIQUE") ENABLE;
 
  ALTER TABLE "IMMOBILISATION"."DETAIL_BIEN" ADD FOREIGN KEY ("CODE")
	  REFERENCES "IMMOBILISATION"."BIEN" ("CODE") ENABLE;

CREATE UNIQUE INDEX "IMMOBILISATION"."SYS_C0012792" ON "IMMOBILISATION"."DETAIL_BIEN" ("ID_CARACTERISTIQUE", "CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
;

CREATE TABLE "IMMOBILISATION"."EMPLOYEE" 
   (	"ID_EMPLOYEE" VARCHAR2(50), 
	"NOM" VARCHAR2(100), 
	"PRENOM" VARCHAR2(100), 
	 PRIMARY KEY ("ID_EMPLOYEE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

CREATE UNIQUE INDEX "IMMOBILISATION"."SYS_C0013538" ON "IMMOBILISATION"."EMPLOYEE" ("ID_EMPLOYEE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
;

CREATE TABLE "IMMOBILISATION"."ETAT_COMPOSANT" 
   (	"ID_COMPOSANT" VARCHAR2(50), 
	"ID_INVENTAIRE" VARCHAR2(50), 
	"ETAT" FLOAT(126), 
	 PRIMARY KEY ("ID_COMPOSANT", "ID_INVENTAIRE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

ALTER TABLE "IMMOBILISATION"."ETAT_COMPOSANT" ADD FOREIGN KEY ("ID_COMPOSANT")
	  REFERENCES "IMMOBILISATION"."COMPOSANT" ("ID_COMPOSANT") ENABLE;
 
  ALTER TABLE "IMMOBILISATION"."ETAT_COMPOSANT" ADD FOREIGN KEY ("ID_INVENTAIRE")
	  REFERENCES "IMMOBILISATION"."INVENTAIRE" ("ID_INVENTAIRE") ENABLE;

CREATE UNIQUE INDEX "IMMOBILISATION"."SYS_C0013318" ON "IMMOBILISATION"."ETAT_COMPOSANT" ("ID_COMPOSANT", "ID_INVENTAIRE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
;

CREATE TABLE "IMMOBILISATION"."ETAT_INVENTAIRE" 
   (	"ID_COMPOSANT" VARCHAR2(50), 
	"ID_VALIDATION" VARCHAR2(50), 
	"ETAT" BINARY_DOUBLE, 
	 PRIMARY KEY ("ID_COMPOSANT", "ID_VALIDATION")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

ALTER TABLE "IMMOBILISATION"."ETAT_INVENTAIRE" ADD FOREIGN KEY ("ID_COMPOSANT")
	  REFERENCES "IMMOBILISATION"."COMPOSANT" ("ID_COMPOSANT") ENABLE;
 
  ALTER TABLE "IMMOBILISATION"."ETAT_INVENTAIRE" ADD FOREIGN KEY ("ID_VALIDATION")
	  REFERENCES "IMMOBILISATION"."VALIDE_MISSION" ("ID_VALIDATION") ENABLE;

CREATE UNIQUE INDEX "IMMOBILISATION"."SYS_C0013731" ON "IMMOBILISATION"."ETAT_INVENTAIRE" ("ID_COMPOSANT", "ID_VALIDATION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
;

CREATE TABLE "IMMOBILISATION"."FIN_MISSION" 
   (	"ID_FIN_MISSION" VARCHAR2(50), 
	"FIN" TIMESTAMP (6), 
	"ID_INVENTAIRE" VARCHAR2(50) NOT NULL ENABLE, 
	"ID_MISSION" VARCHAR2(50) NOT NULL ENABLE, 
	 PRIMARY KEY ("ID_FIN_MISSION")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

ALTER TABLE "IMMOBILISATION"."FIN_MISSION" ADD FOREIGN KEY ("ID_INVENTAIRE")
	  REFERENCES "IMMOBILISATION"."INVENTAIRE" ("ID_INVENTAIRE") ENABLE;
 
  ALTER TABLE "IMMOBILISATION"."FIN_MISSION" ADD FOREIGN KEY ("ID_MISSION")
	  REFERENCES "IMMOBILISATION"."MISSION" ("ID_MISSION") ENABLE;

CREATE UNIQUE INDEX "IMMOBILISATION"."SYS_C0013692" ON "IMMOBILISATION"."FIN_MISSION" ("ID_FIN_MISSION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
;

CREATE TABLE "IMMOBILISATION"."IMMOBILISATION" 
   (	"ID_IMMOBILISATION" VARCHAR2(50), 
	"NOM" VARCHAR2(100) NOT NULL ENABLE, 
	"ID_CATEGORIE" VARCHAR2(50) NOT NULL ENABLE, 
	 PRIMARY KEY ("ID_IMMOBILISATION")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

ALTER TABLE "IMMOBILISATION"."IMMOBILISATION" ADD FOREIGN KEY ("ID_CATEGORIE")
	  REFERENCES "IMMOBILISATION"."CATEGORIE" ("ID_CATEGORIE") ENABLE;

CREATE UNIQUE INDEX "IMMOBILISATION"."SYS_C0012718" ON "IMMOBILISATION"."IMMOBILISATION" ("ID_IMMOBILISATION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
;

CREATE TABLE "IMMOBILISATION"."INVENTAIRE" 
   (	"ID_INVENTAIRE" VARCHAR2(50), 
	"DATE_INVENTAIRE" DATE, 
	"CODE" VARCHAR2(50) NOT NULL ENABLE, 
	 PRIMARY KEY ("ID_INVENTAIRE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

ALTER TABLE "IMMOBILISATION"."INVENTAIRE" ADD FOREIGN KEY ("CODE")
	  REFERENCES "IMMOBILISATION"."BIEN" ("CODE") ENABLE;

CREATE UNIQUE INDEX "IMMOBILISATION"."SYS_C0013310" ON "IMMOBILISATION"."INVENTAIRE" ("ID_INVENTAIRE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
;

CREATE TABLE "IMMOBILISATION"."MARQUE" 
   (	"ID_MARQUE" VARCHAR2(50), 
	"NOM" VARCHAR2(100) NOT NULL ENABLE, 
	"ID_IMMOBILISATION" VARCHAR2(50), 
	 PRIMARY KEY ("ID_MARQUE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

ALTER TABLE "IMMOBILISATION"."MARQUE" ADD FOREIGN KEY ("ID_IMMOBILISATION")
	  REFERENCES "IMMOBILISATION"."IMMOBILISATION" ("ID_IMMOBILISATION") ENABLE;

CREATE UNIQUE INDEX "IMMOBILISATION"."SYS_C0012733" ON "IMMOBILISATION"."MARQUE" ("ID_MARQUE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
;

CREATE TABLE "IMMOBILISATION"."MISSION" 
   (	"ID_MISSION" VARCHAR2(50), 
	"LATITUDE" FLOAT(126), 
	"LONGITUDE" FLOAT(126), 
	"DEBUT" TIMESTAMP (6), 
	"ADRESSE" VARCHAR2(100), 
	"ETAT" NUMBER(10,0) DEFAULT 0 NOT NULL ENABLE, 
	"CODE" VARCHAR2(50) NOT NULL ENABLE, 
	"ID_EMPLOYEE" VARCHAR2(50) NOT NULL ENABLE, 
	 PRIMARY KEY ("ID_MISSION")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

ALTER TABLE "IMMOBILISATION"."MISSION" ADD FOREIGN KEY ("CODE")
	  REFERENCES "IMMOBILISATION"."BIEN" ("CODE") ENABLE;
 
  ALTER TABLE "IMMOBILISATION"."MISSION" ADD FOREIGN KEY ("ID_EMPLOYEE")
	  REFERENCES "IMMOBILISATION"."EMPLOYEE" ("ID_EMPLOYEE") ENABLE;

CREATE UNIQUE INDEX "IMMOBILISATION"."SYS_C0013687" ON "IMMOBILISATION"."MISSION" ("ID_MISSION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
;

CREATE TABLE "IMMOBILISATION"."RECEPTION" 
   (	"ID_RECEPTION" VARCHAR2(50), 
	"CODE" VARCHAR2(100) NOT NULL ENABLE, 
	"DATE_RECEPTION" DATE NOT NULL ENABLE, 
	"ID_ADDRESSE" VARCHAR2(50) NOT NULL ENABLE, 
	"ID_IMMOBILISATION" VARCHAR2(50) NOT NULL ENABLE, 
	 PRIMARY KEY ("ID_RECEPTION")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

ALTER TABLE "IMMOBILISATION"."RECEPTION" ADD FOREIGN KEY ("ID_ADDRESSE")
	  REFERENCES "IMMOBILISATION"."ADRESSE" ("ID_ADDRESSE") ENABLE;
 
  ALTER TABLE "IMMOBILISATION"."RECEPTION" ADD FOREIGN KEY ("ID_IMMOBILISATION")
	  REFERENCES "IMMOBILISATION"."IMMOBILISATION" ("ID_IMMOBILISATION") ENABLE;

CREATE UNIQUE INDEX "IMMOBILISATION"."SYS_C0012785" ON "IMMOBILISATION"."RECEPTION" ("ID_RECEPTION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
;

CREATE TABLE "IMMOBILISATION"."SAMPLE" 
   (	"X" FLOAT(126), 
	"Y" FLOAT(126)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
;

CREATE TABLE "IMMOBILISATION"."VALIDE_MISSION" 
   (	"ID_VALIDATION" VARCHAR2(50), 
	"DATE_VALIDATION" TIMESTAMP (6), 
	"ID_MISSION" VARCHAR2(50) NOT NULL ENABLE, 
	 PRIMARY KEY ("ID_VALIDATION")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

ALTER TABLE "IMMOBILISATION"."VALIDE_MISSION" ADD FOREIGN KEY ("ID_MISSION")
	  REFERENCES "IMMOBILISATION"."MISSION" ("ID_MISSION") ENABLE;

CREATE UNIQUE INDEX "IMMOBILISATION"."SYS_C0013729" ON "IMMOBILISATION"."VALIDE_MISSION" ("ID_VALIDATION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
;

CREATE OR REPLACE FORCE VIEW "IMMOBILISATION"."V_ALERTE" ("ID_COMPOSANT", "NOM", "ETAT", "CODE", "MERE", "NOMBRE", "ID_IMMOBILISATION", "CAPACITE", "UNITE", "ALERTE", "COMPORTEMENT", "COLOR", "DEBUT", "FIN") AS 
  SELECT "ID_COMPOSANT","NOM","ETAT","CODE","MERE","NOMBRE","ID_IMMOBILISATION","CAPACITE","UNITE","ALERTE","COMPORTEMENT","COLOR","DEBUT","FIN"
FROM V_COMPOSANT_ETAT_HIERARCHIE
WHERE etat <= alerte;
;

CREATE OR REPLACE FORCE VIEW "IMMOBILISATION"."V_ALERTE_NOMBRE" ("CODE", "ALERTE") AS 
  SELECT 
	b.code, SUM(
	CASE 
		WHEN a.code IS NULL THEN 0
		ELSE 1
	END) AS alerte
FROM V_ALERTE a
RIGHT JOIN bien b ON a.code = b.code
GROUP BY b.code;
;

CREATE OR REPLACE FORCE VIEW "IMMOBILISATION"."V_AXE" ("ID_MISSION", "CODE", "ID_COMPOSANT", "DEBUT", "ID_EMPLOYEE", "SECONDS", "RESTE", "ACTUELLE", "CONSOMMATION", "MONTH", "X", "X_BAR", "Y", "Y_BAR") AS 
  SELECT v."ID_MISSION",v."CODE",v."ID_COMPOSANT",v."DEBUT",v."ID_EMPLOYEE",v."SECONDS",v."RESTE",v."ACTUELLE",v."CONSOMMATION",v."MONTH", SECONDS / 3600 AS x, AVG(SECONDS / 3600) OVER() AS x_bar, CONSOMMATION AS y , AVG(CONSOMMATION) OVER() AS y_bar
FROM V_ETAT_COMPOSANT_MISSION v
ORDER BY x;
;

CREATE OR REPLACE FORCE VIEW "IMMOBILISATION"."V_AXE_Y" ("CODE", "ID_COMPOSANT", "ID_EMPLOYEE", "CONSOMMATION") AS 
  SELECT code, id_composant, id_employee, AVG(CONSOMMATION) AS consommation
FROM V_ETAT_COMPOSANT_MISSION
GROUP BY code, id_composant, id_employee;
;

CREATE OR REPLACE FORCE VIEW "IMMOBILISATION"."V_BIEN" ("CODE", "NOM", "ID_MARQUE", "DATE_RECEPTION", "ID_ADDRESSE", "ID_IMMOBILISATION") AS 
  SELECT b.code, nom, ID_MARQUE, date_reception, id_addresse, id_immobilisation 
FROM BIEN b 
JOIN RECEPTION r ON b.code = r.code;
;

CREATE OR REPLACE FORCE VIEW "IMMOBILISATION"."V_CARACTERISTIQUE_BIEN" ("ID_CARACTERISTIQUE", "NOM", "ID_IMMOBILISATION", "CODE", "VALEUR") AS 
  SELECT c.id_caracteristique, c.nom, c.id_immobilisation, d.code, d.valeur
FROM detail_bien d
    JOIN caracteristique c ON d.id_caracteristique = c.id_caracteristique;
;

CREATE OR REPLACE FORCE VIEW "IMMOBILISATION"."V_COMPOSANT" ("ID_COMPOSANT", "NOM", "MANAGER", "CODE", "MERE", "NIVEAU", "ETAT", "DATE_INVENTAIRE") AS 
  SELECT id_composant, nom, manager, code, mere, niveau, max(etat) AS etat, DATE_INVENTAIRE
FROM V_HIERACHIE i
GROUP BY id_composant, nom, Manager, code, mere, niveau, DATE_INVENTAIRE;
;

CREATE OR REPLACE FORCE VIEW "IMMOBILISATION"."V_COMPOSANT_ETAT" ("ID_COMPOSANT", "NOM", "MANAGER", "CODE", "MERE", "NIVEAU", "ETAT", "DATE_INVENTAIRE") AS 
  SELECT id_composant, nom, manager, code, mere, niveau, max(etat) AS etat, DATE_INVENTAIRE
FROM IMMOBILISATION.v_hierachie_simple i
GROUP BY id_composant, nom, Manager, code, mere, niveau, DATE_INVENTAIRE;
;

CREATE OR REPLACE FORCE VIEW "IMMOBILISATION"."V_COMPOSANT_ETAT_HIERARCHIE" ("ID_COMPOSANT", "NOM", "ETAT", "CODE", "MERE", "NOMBRE", "ID_IMMOBILISATION", "CAPACITE", "UNITE", "ALERTE", "COMPORTEMENT", "COLOR", "DEBUT", "FIN", "DATE_INVENTAIRE") AS 
  SELECT c.ID_COMPOSANT , nom, ROUND(etat, 2) AS etat, e.code, mere, nombre, c.id_immobilisation, c.capacite, c.unite, c.alerte, co.designation AS comportement, co.color, co.debut, co.fin, DATE_INVENTAIRE
FROM IMMOBILISATION.v_etat_composant_hierarchie e
JOIN IMMOBILISATION.COMPOSANT c ON c.ID_COMPOSANT = e.id_composant
JOIN IMMOBILISATION.RECEPTION r ON r.code = e.code
JOIN COMPORTEMENT co ON co.debut <= etat AND etat <= co.fin
WHERE r.ID_IMMOBILISATION = c.ID_IMMOBILISATION;
;

CREATE OR REPLACE FORCE VIEW "IMMOBILISATION"."V_COMPOSANT_INVENTAIRE" ("MERE_ID_COMPOSANT", "MERE_NOM", "MERE_ALERTE", "ID_COMPOSANT", "NOM", "ID_IMMOBILISATION", "CAPACITE", "UNITE", "ALERTE") AS 
  SELECT COALESCE(co.ID_COMPOSANT, 'ID') AS mere_id_composant, COALESCE(co.NOM, 'Composant Indépandent') AS mere_nom, co.ALERTE as mere_alerte, c.ID_COMPOSANT, c.NOM, c.ID_IMMOBILISATION, c.CAPACITE, c.UNITE, c.ALERTE
FROM v_niveau_max n
JOIN composant c ON n.id_composant = c.ID_COMPOSANT
LEFT JOIN COMPOSANT co ON co.ID_COMPOSANT  = c.Mere
WHERE niveau = 1
ORDER BY mere_id_composant, ID_COMPOSANT;
;

CREATE OR REPLACE FORCE VIEW "IMMOBILISATION"."V_ETAT" ("ID_COMPOSANT", "CODE", "ETAT", "DATE_INVENTAIRE") AS 
  SELECT i."ID_COMPOSANT",i."CODE",i."ETAT", NULL AS DATE_INVENTAIRE
FROM V_INITIALISATION_MERE i
UNION
SELECT id_composant, code, etat, dernier_inventaire
FROM v_last_inventaire_etat e;
;

CREATE OR REPLACE FORCE VIEW "IMMOBILISATION"."V_ETAT_BIEN" ("CODE", "ETAT", "NOMBRE") AS 
  SELECT code, (sum(etat) / COUNT(*)) AS etat, COUNT(*) AS nombre
FROM V_COMPOSANT_ETAT_HIERARCHIE
WHERE mere IS NULL
GROUP BY code;
;

CREATE OR REPLACE FORCE VIEW "IMMOBILISATION"."V_ETAT_COMPOSANT" ("ID_COMPOSANT", "NOM", "MERE", "CODE", "ETAT", "DATE_INVENTAIRE") AS 
  SELECT c.ID_COMPOSANT, nom, mere, code , etat, DATE_INVENTAIRE
FROM V_ETAT_FINALE e
JOIN COMPOSANT c ON c.ID_COMPOSANT = e.id_composant;
;

CREATE OR REPLACE FORCE VIEW "IMMOBILISATION"."V_ETAT_COMPOSANT_HIERARCHIE" ("ID_COMPOSANT", "CODE", "ETAT", "NOMBRE", "DATE_INVENTAIRE") AS 
  SELECT manager AS ID_COMPOSANT, code, sum(etat) / greatest((count(*) - 1), 1) AS etat, greatest((count(*) - 1), 1) AS nombre, MAX(DATE_INVENTAIRE) AS DATE_INVENTAIRE
FROM IMMOBILISATION.V_COMPOSANT_ETAT
GROUP BY manager, code;
;

CREATE OR REPLACE FORCE VIEW "IMMOBILISATION"."V_ETAT_COMPOSANT_MISSION" ("ID_MISSION", "CODE", "ID_COMPOSANT", "DEBUT", "ID_EMPLOYEE", "SECONDS", "RESTE", "ACTUELLE", "CONSOMMATION", "MONTH") AS 
  SELECT m.ID_MISSION, m.code, e.ID_COMPOSANT, m.debut, m.ID_EMPLOYEE, m.SECONDS, e.etat AS reste, ei.etat AS actuelle, (ei.etat - e.etat) AS consommation, extract(month from debut) AS month
FROM v_mission_time_seconde m
JOIN INVENTAIRE i ON i.ID_INVENTAIRE = m.INVENTAIRE
JOIN ETAT_COMPOSANT e ON e.ID_INVENTAIRE = i.ID_INVENTAIRE
JOIN v_etat_mission_validation ei ON ei.id_composant = e.id_composant AND ei.id_mission = m.id_mission;
;

CREATE OR REPLACE FORCE VIEW "IMMOBILISATION"."V_ETAT_FINALE" ("ID_COMPOSANT", "CODE", "ETAT", "DATE_INVENTAIRE") AS 
  SELECT ID_COMPOSANT, CODE, MAX(ETAT) AS ETAT, MAX(DATE_INVENTAIRE) AS DATE_INVENTAIRE
FROM V_ETAT 
GROUP BY ID_COMPOSANT, CODE;
;

CREATE OR REPLACE FORCE VIEW "IMMOBILISATION"."V_ETAT_MISSION" ("ID_COMPOSANT", "ETAT", "DATE_VALIDATION", "ID_MISSION", "ID_VALIDATION") AS 
  SELECT ID_COMPOSANT, etat, date_validation, id_mission, v.ID_VALIDATION 
FROM ETAT_INVENTAIRE e
	JOIN VALIDE_MISSION v ON v.ID_VALIDATION  = e.ID_VALIDATION;
;

CREATE OR REPLACE FORCE VIEW "IMMOBILISATION"."V_ETAT_MISSION_EN_COURS" ("ID_COMPOSANT", "CODE", "ETAT", "DATE_ACTUELLE") AS 
  SELECT v.id_composant, m.code, GREATEST(e.etat - (v.slope * ((EXTRACT (DAY FROM CURRENT_TIMESTAMP(1) - debut) * 24 * 60 * 60
       + EXTRACT (HOUR FROM sysdate - debut) * 60 * 60
       + EXTRACT (MINUTE FROM sysdate - debut) * 60) / 3600) + v.intercept) * ((EXTRACT (DAY FROM CURRENT_TIMESTAMP(1) - debut) * 24 * 60 * 60
       + EXTRACT (HOUR FROM sysdate - debut) * 60 * 60
       + EXTRACT (MINUTE FROM sysdate - debut) * 60) / 3600), 0) AS etat, sysdate AS date_actuelle
FROM V_MISSION_EN_COURS m
	JOIN V_MODEL v ON m.code = v.code AND m.id_employee = v.id_employee
	JOIN v_etat_mission_validation e ON e.id_composant = v.id_composant AND e.id_mission = m.id_mission;
;

CREATE OR REPLACE FORCE VIEW "IMMOBILISATION"."V_ETAT_MISSION_VALIDATION" ("ID_COMPOSANT", "ETAT", "DATE_VALIDATION", "ID_MISSION", "ID_VALIDATION") AS 
  SELECT ID_COMPOSANT, etat, date_validation, id_mission, v.ID_VALIDATION 
FROM ETAT_INVENTAIRE e
	JOIN VALIDE_MISSION v ON v.ID_VALIDATION  = e.ID_VALIDATION;
;

CREATE OR REPLACE FORCE VIEW "IMMOBILISATION"."V_HIERACHIE" ("ID_COMPOSANT", "NOM", "MANAGER", "CODE", "MERE", "ETAT", "NIVEAU", "DATE_INVENTAIRE") AS 
  SELECT id_composant, nom, CONNECT_BY_ROOT nom AS manager, code, mere, ETAT, LEVEL AS niveau, DATE_INVENTAIRE
FROM V_ETAT_COMPOSANT
START WITH mere IS NULL
CONNECT BY PRIOR ID_COMPOSANT = MERE;
;

CREATE OR REPLACE FORCE VIEW "IMMOBILISATION"."V_HIERACHIE_SIMPLE" ("ID_COMPOSANT", "NOM", "MANAGER", "CODE", "MERE", "ETAT", "NIVEAU", "DATE_INVENTAIRE") AS 
  SELECT id_composant, nom, CONNECT_BY_ROOT id_composant AS manager, code, mere, ETAT, LEVEL AS niveau, DATE_INVENTAIRE
FROM IMMOBILISATION.V_ETAT_COMPOSANT
CONNECT BY PRIOR ID_COMPOSANT = MERE;
;

CREATE OR REPLACE FORCE VIEW "IMMOBILISATION"."V_INITIALISATION_MERE" ("ID_COMPOSANT", "CODE", "ETAT") AS 
  SELECT ID_COMPOSANT, CODE, 0 AS ETAT
FROM IMMOBILISATION.COMPOSANT, IMMOBILISATION.BIEN;
;

CREATE OR REPLACE FORCE VIEW "IMMOBILISATION"."V_LAST_INVENTAIRE" ("CODE", "ID_COMPOSANT", "DERNIER_INVENTAIRE") AS 
  SELECT code, id_composant, MAX(dernier_inventaire) AS dernier_inventaire
FROM v_etat_inventaire_mission
WHERE dernier_inventaire <= sysdate
GROUP BY code, id_composant;
;

CREATE OR REPLACE FORCE VIEW "IMMOBILISATION"."V_LAST_INVENTAIRE_COMPLET" ("ID_INVENTAIRE", "CODE", "DATE_INVENTAIRE") AS 
  SELECT i.id_inventaire, l.code, i.date_inventaire
FROM IMMOBILISATION.v_last_inventaire l
JOIN IMMOBILISATION.INVENTAIRE i ON l.code = i.code AND l.dernier_inventaire = i.date_inventaire;
;

CREATE OR REPLACE FORCE VIEW "IMMOBILISATION"."V_LAST_INVENTAIRE_ETAT" ("ID_COMPOSANT", "CODE", "ETAT", "DERNIER_INVENTAIRE") AS 
  SELECT e.id_composant, e.code, etat, l.dernier_inventaire
FROM v_etat_inventaire_mission e
	JOIN v_last_inventaire l ON l.code = e.code AND l.id_composant = e.id_composant AND l.DERNIER_INVENTAIRE = e.dernier_inventaire;
;

CREATE OR REPLACE FORCE VIEW "IMMOBILISATION"."V_LISTE_BIEN_ETAT" ("CODE", "ID_MARQUE", "NOM", "ETAT", "COMPORTEMENT", "COLOR", "ALERTE", "DATE_RECEPTION", "ID_ADDRESSE", "ID_IMMOBILISATION") AS 
  SELECT e.code, b.id_marque, b.nom, e.etat, co.DESIGNATION AS COMPORTEMENT, co.color, a.alerte, r.DATE_RECEPTION, r.ID_ADDRESSE, r.ID_IMMOBILISATION
FROM v_etat_bien e
JOIN COMPORTEMENT co ON etat BETWEEN co.debut AND co.fin
JOIN RECEPTION r ON r.code = e.code
JOIN BIEN b ON b.code = e.code
JOIN V_ALERTE_NOMBRE a ON a.code = e.code;
;

CREATE OR REPLACE FORCE VIEW "IMMOBILISATION"."V_MISSION" ("ID_MISSION", "LATITUDE", "LONGITUDE", "DEBUT", "ADRESSE", "ETAT", "CODE", "ID_EMPLOYEE", "FIN", "ID_VALIDATION", "INVENTAIRE") AS 
  SELECT m."ID_MISSION",m."LATITUDE",m."LONGITUDE",m."DEBUT",m."ADRESSE",m."ETAT",m."CODE",m."ID_EMPLOYEE", f.FIN AS fin, v.ID_VALIDATION, f.ID_INVENTAIRE AS inventaire
FROM mission m
LEFT JOIN valide_mission v ON m.id_mission = v.id_mission
LEFT JOIN fin_mission f ON f.id_mission = m.id_mission;
;

CREATE OR REPLACE FORCE VIEW "IMMOBILISATION"."V_MISSION_EN_COURS" ("ID_MISSION", "LATITUDE", "LONGITUDE", "DEBUT", "ADRESSE", "ETAT", "CODE", "ID_EMPLOYEE", "FIN", "ID_VALIDATION", "INVENTAIRE", "SECONDS") AS 
  SELECT "ID_MISSION","LATITUDE","LONGITUDE","DEBUT","ADRESSE","ETAT","CODE","ID_EMPLOYEE","FIN","ID_VALIDATION","INVENTAIRE","SECONDS"
FROM v_mission_time_seconde WHERE etat = 10 AND fin is NULL AND debut <= sysdate;
;

CREATE OR REPLACE FORCE VIEW "IMMOBILISATION"."V_MISSION_TIME_SECONDE" ("ID_MISSION", "LATITUDE", "LONGITUDE", "DEBUT", "ADRESSE", "ETAT", "CODE", "ID_EMPLOYEE", "FIN", "ID_VALIDATION", "INVENTAIRE", "SECONDS") AS 
  SELECT m."ID_MISSION",m."LATITUDE",m."LONGITUDE",m."DEBUT",m."ADRESSE",m."ETAT",m."CODE",m."ID_EMPLOYEE",m."FIN",m."ID_VALIDATION",m."INVENTAIRE",
		EXTRACT (DAY FROM fin - debut) * 24 * 60 * 60


       + EXTRACT (HOUR FROM fin - debut) * 60 * 60


       + EXTRACT (MINUTE FROM fin - debut) * 60 AS seconds
FROM v_mission m;
;

CREATE OR REPLACE FORCE VIEW "IMMOBILISATION"."V_MODEL" ("CODE", "ID_COMPOSANT", "ID_EMPLOYEE", "SLOPE", "INTERCEPT") AS 
  SELECT s.code, s.id_composant, s.id_employee,
	slope,
	consommation - x_bar_max * slope AS intercept 
FROM v_slope s
	JOIN v_axe_y a ON a.code = s.code AND a.id_composant = s.id_composant AND s.id_employee = a.id_employee;
;

CREATE OR REPLACE FORCE VIEW "IMMOBILISATION"."V_NIVEAU" ("ID_COMPOSANT", "NIVEAU") AS 
  SELECT CONNECT_BY_ROOT id_composant AS id_composant, LEVEL AS niveau
FROM COMPOSANT
CONNECT BY PRIOR ID_COMPOSANT = MERE;
;

CREATE OR REPLACE FORCE VIEW "IMMOBILISATION"."V_NIVEAU_MAX" ("ID_COMPOSANT", "NIVEAU") AS 
  SELECT id_composant, MAX(Niveau) AS niveau
FROM v_niveau
GROUP BY id_composant;
;

CREATE OR REPLACE FORCE VIEW "IMMOBILISATION"."V_SLOPE" ("CODE", "ID_COMPOSANT", "ID_EMPLOYEE", "SLOPE", "X_BAR_MAX", "Y_BAR_MAX") AS 
  SELECT code, id_composant, id_employee,
	SUM((x - x_bar) * (y - y_bar)) / SUM((x - x_bar) * (x - x_bar)) AS slope,
	MAX(x_bar) AS x_bar_max,
	MAX(y_bar) AS y_bar_max
FROM V_AXE a
GROUP BY code, id_composant, id_employee;
;

CREATE SEQUENCE IMMOBILISATION.SEQ_BIEN INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE IMMOBILISATION.SEQ_FIN_MISSION INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE IMMOBILISATION.SEQ_INVENTAIRE INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE IMMOBILISATION.SEQ_MISSION INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE IMMOBILISATION.SEQ_RECEPTION INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE IMMOBILISATION.SEQ_VALIDATION_MISSION INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;